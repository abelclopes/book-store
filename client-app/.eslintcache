[{"/home/abel/projetos/book-store/client-app/src/reportWebVitals.js":"1","/home/abel/projetos/book-store/client-app/src/app/services/auth.js":"2","/home/abel/projetos/book-store/client-app/src/app/pages/Auth/SignUp/index.js":"3","/home/abel/projetos/book-store/client-app/src/app/pages/Books/BooksDetails/index.js":"4","/home/abel/projetos/book-store/client-app/src/app/pages/Books/BookReturn/index.js":"5","/home/abel/projetos/book-store/client-app/src/app/pages/Auth/SignUp/styles.js":"6","/home/abel/projetos/book-store/client-app/src/app/pages/Auth/SignIn/styles.js":"7","/home/abel/projetos/book-store/client-app/src/app/pages/Books/BookReturn/styles.js":"8","/home/abel/projetos/book-store/client-app/src/app/pages/Auth/SignUp/service/signUp.service.js":"9","/home/abel/projetos/book-store/client-app/src/app/components/Checkbox/index.js":"10","/home/abel/projetos/book-store/client-app/src/app/components/button/index.js":"11","/home/abel/projetos/book-store/client-app/src/App.js":"12","/home/abel/projetos/book-store/client-app/src/app/components/Layout/index.js":"13","/home/abel/projetos/book-store/client-app/src/app/pages/Auth/SignIn/index.js":"14","/home/abel/projetos/book-store/client-app/src/app/pages/Books/BooksAdd/index.js":"15","/home/abel/projetos/book-store/client-app/src/app/pages/Books/BooksDetails/styles.js":"16","/home/abel/projetos/book-store/client-app/src/app/pages/Books/service/books.service.js":"17","/home/abel/projetos/book-store/client-app/src/app/components/DatailsBook/index.js":"18","/home/abel/projetos/book-store/client-app/src/app/Routes/index.js":"19","/home/abel/projetos/book-store/client-app/src/app/pages/Home/index.js":"20","/home/abel/projetos/book-store/client-app/src/app/pages/Books/BookEdit/index.js":"21","/home/abel/projetos/book-store/client-app/src/app/services/api.js":"22","/home/abel/projetos/book-store/client-app/src/app/components/DatailsBook/styles.js":"23","/home/abel/projetos/book-store/client-app/src/index.js":"24","/home/abel/projetos/book-store/client-app/src/app/components/NavMenu/index.js":"25","/home/abel/projetos/book-store/client-app/src/app/pages/Books/BooksList/index.js":"26","/home/abel/projetos/book-store/client-app/src/app/pages/Books/BooksAdd/styles.js":"27","/home/abel/projetos/book-store/client-app/src/app/pages/Books/BooksList/styles.js":"28","/home/abel/projetos/book-store/client-app/src/app/components/Switch/index.js":"29"},{"size":362,"mtime":1611675018774,"results":"30","hashOfConfig":"31"},{"size":377,"mtime":1611675018774,"results":"32","hashOfConfig":"31"},{"size":1935,"mtime":1611675018774,"results":"33","hashOfConfig":"31"},{"size":3617,"mtime":1611675018774,"results":"34","hashOfConfig":"31"},{"size":3605,"mtime":1611675018774,"results":"35","hashOfConfig":"31"},{"size":1119,"mtime":1611675018774,"results":"36","hashOfConfig":"31"},{"size":1189,"mtime":1611675018774,"results":"37","hashOfConfig":"31"},{"size":370,"mtime":1611675018774,"results":"38","hashOfConfig":"31"},{"size":1857,"mtime":1611675018774,"results":"39","hashOfConfig":"31"},{"size":1112,"mtime":1611675018774,"results":"40","hashOfConfig":"31"},{"size":1873,"mtime":1611675018774,"results":"41","hashOfConfig":"31"},{"size":1170,"mtime":1611675018774,"results":"42","hashOfConfig":"31"},{"size":591,"mtime":1611675018774,"results":"43","hashOfConfig":"31"},{"size":1715,"mtime":1611675018774,"results":"44","hashOfConfig":"31"},{"size":5488,"mtime":1611675018774,"results":"45","hashOfConfig":"31"},{"size":370,"mtime":1611675018774,"results":"46","hashOfConfig":"31"},{"size":5519,"mtime":1611675018774,"results":"47","hashOfConfig":"31"},{"size":1900,"mtime":1611675018774,"results":"48","hashOfConfig":"31"},{"size":1618,"mtime":1611675018774,"results":"49","hashOfConfig":"31"},{"size":4232,"mtime":1611675018774,"results":"50","hashOfConfig":"31"},{"size":6069,"mtime":1611675018774,"results":"51","hashOfConfig":"31"},{"size":325,"mtime":1611675018774,"results":"52","hashOfConfig":"31"},{"size":2622,"mtime":1611675018774,"results":"53","hashOfConfig":"31"},{"size":500,"mtime":1611675018774,"results":"54","hashOfConfig":"31"},{"size":1579,"mtime":1611675018774,"results":"55","hashOfConfig":"31"},{"size":5698,"mtime":1611675018774,"results":"56","hashOfConfig":"31"},{"size":3209,"mtime":1611675018774,"results":"57","hashOfConfig":"31"},{"size":1783,"mtime":1611675018774,"results":"58","hashOfConfig":"31"},{"size":548,"mtime":1611675018774,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1sdg5qf",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/home/abel/projetos/book-store/client-app/src/reportWebVitals.js",[],["127","128"],"/home/abel/projetos/book-store/client-app/src/app/services/auth.js",[],"/home/abel/projetos/book-store/client-app/src/app/pages/Auth/SignUp/index.js",[],"/home/abel/projetos/book-store/client-app/src/app/pages/Books/BooksDetails/index.js",[],"/home/abel/projetos/book-store/client-app/src/app/pages/Books/BookReturn/index.js",[],"/home/abel/projetos/book-store/client-app/src/app/pages/Auth/SignUp/styles.js",[],"/home/abel/projetos/book-store/client-app/src/app/pages/Auth/SignIn/styles.js",[],"/home/abel/projetos/book-store/client-app/src/app/pages/Books/BookReturn/styles.js",[],"/home/abel/projetos/book-store/client-app/src/app/pages/Auth/SignUp/service/signUp.service.js",[],"/home/abel/projetos/book-store/client-app/src/app/components/Checkbox/index.js",[],"/home/abel/projetos/book-store/client-app/src/app/components/button/index.js",[],"/home/abel/projetos/book-store/client-app/src/App.js",[],"/home/abel/projetos/book-store/client-app/src/app/components/Layout/index.js",["129"],"import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport NavMenu from '../NavMenu';\r\n\r\n// export default class Layout extends Component {\r\n//   static displayName = Layout.name;\r\n\r\n//   render () {\r\n//     return (\r\n//       <>\r\n//         <NavMenu />\r\n//         <Container>\r\n//           {this.props.children}\r\n//         </Container>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\nconst Layout =({...props})=> {\r\n  return (\r\n    <>\r\n      <NavMenu />\r\n      <Container>\r\n        {props.children}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nexport default Layout;","/home/abel/projetos/book-store/client-app/src/app/pages/Auth/SignIn/index.js",[],"/home/abel/projetos/book-store/client-app/src/app/pages/Books/BooksAdd/index.js",["130"],"import React, { useState, useEffect } from \"react\";\nimport {  useHistory } from \"react-router-dom\";\nimport BookService from \"../service/books.service\";\nimport styled from \"styled-components\";\n\nimport { Container, FormAddBook,  ContainerFormCenter, FormItemTextArea, FormItem } from \"./styles\";\n\nconst BooksAdd = () => {\n  const history = useHistory();\n\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [showMessageSuccess, setShowMessageSuccess] = useState(false);\n  const [errorOnSave, setErrorOnSave] = useState(false);\n  const [categories, setCategories] = useState('');\n  const [book, setBook] = useState({title:'',description:'',year:'',publishingCompany:'',author:'',categoryId:''});\n\n  \n\n  const saveBook = () =>{\n    BookService.CreatedBook(book)\n    .then(res =>{\n      if(res.success){\n        setShowMessageSuccess(true)\n        setTimeout(() => {          \n          setShowMessageSuccess(false)\n          history.push('/books')\n        }, 5000);\n      }\n    })\n    .catch(err => {\n      setErrorOnSave(true)\n      setShowMessageSuccess(true)\n\n      setTimeout(() => {          \n        setErrorOnSave(false)\n        setShowMessageSuccess(false)\n        history.push('/books')\n      }, 5000);\n    })\n\n  }\n  \n  useEffect(() => {\n    const getCategories = () =>{\n      BookService.GetCategories()\n      .then(res =>{\n        setCategories(res)\n      })\n    }\n    getCategories()\n    \n  }, [])\n\n  useEffect(() => {\n    const bookIsValid = () =>{\n      if(book.title !== '' && book.description !== '' && book.year !== '' &&\n        book.publishingCompany !== '' && book.author !== '' && book.categoryId !== ''){\n        setButtonDisabled(false);\n       }else{\n        setButtonDisabled(true);\n       }\n    }\n    bookIsValid()\n  }, [book])\n  \n\n  const showOption = () => {\n    if(categories && categories.length > 0)\n    return categories.map( (cat, index)=> {\n      return (\n        <option value={cat.id}>{cat.name}</option>\n      )\n    })\n  }\n\n  return (\n    <Container>\n        <h1>Cadastrar Novo Livro</h1>\n\n        <ContainerFormCenter>\n          <FormAddBook onSubmit={e => { e.preventDefault(); }}>\n            <MessageSuccessOrError hasSuccess={showMessageSuccess}>\n              Livro Cadastrado Com sucesso!\n            </MessageSuccessOrError>\n              <FormItem>\n                  <label>Titulo:</label>\n                  <input \n                    value={book.title}\n                    type=\"text\" \n                    onChange={(e)=>{                    \n                      e.preventDefault()\n                      setBook({...book ,title: e.target.value})\n                    }} \n                  />\n              </FormItem>\n              <FormItem>\n                <label>Autor:</label>\n                <input \n                    value={book.author}\n                    type=\"text\" \n                    onChange={(e)=>{                    \n                      e.preventDefault()\n                      setBook({...book ,author: e.target.value})\n                    }} \n                  />\n              </FormItem>\n              <FormItem>\n                <label>Ano:</label>\n                <input \n                    value={book.year}\n                    type=\"text\" \n                    onChange={(e)=>{                    \n                      e.preventDefault()\n                      setBook({...book ,year: e.target.value})\n                    }} \n                  />\n              </FormItem>\n              <FormItem>\n                <label>Editora:</label>\n                <input \n                    value={book.publishingCompany}\n                    type=\"text\" \n                    onChange={(e)=>{                    \n                      e.preventDefault()\n                      setBook({...book ,publishingCompany: e.target.value})\n                    }} \n                  />\n              </FormItem>\n\n              <FormItem>\n                <label>Cateoria:</label>\n                  <select as=\"select\"  onChange={(e)=> {\n                    setBook({...book ,categoryId: e.target.value !== \"Selecione uma Categoria\" ? e.target.value: '' })\n                  }}   value={book.categoryId}>\n                    <option>Selecione uma Categoria</option>\n                    {showOption()}\n                  </select>\n              </FormItem>\n              <FormItemTextArea>\n                <label>Descrição:</label>\n                <textarea onChange={(e)=>{                    \n                      e.preventDefault()\n                      setBook({...book ,description: e.target.value})\n                    }} >{book.description}</textarea>\n              </FormItemTextArea>\n\n              <FormItem>\n                <button \n                  disabled={buttonDisabled} \n                  type=\"button\" \n                  className=\"btn btn-primary\" \n                  onClick={(e) => {\n                    e.preventDefault();\n                    saveBook()  \n                  }}>\n                    Salvar\n                  </button>\n              </FormItem>\n          </FormAddBook>\n        </ContainerFormCenter>\n\n    </Container>\n  );\n}\nconst MessageSuccessOrError = styled.div`\n  background:  ${({ hadError }) =>{\n    return (hadError ? '#ff3333' : '#81c189')}\n  }; \n  min-height: 20px;\n  display: block;\n  width: 100%;\n  border-radius: 6px;\n  padding: 20px;\n  margin-bottom: 20px;\n  display: ${({ hasSuccess }) =>{\n    return (hasSuccess ? 'block': 'none' )}\n  }; \n`;\n\nexport default BooksAdd;","/home/abel/projetos/book-store/client-app/src/app/pages/Books/BooksDetails/styles.js",[],"/home/abel/projetos/book-store/client-app/src/app/pages/Books/service/books.service.js",[],"/home/abel/projetos/book-store/client-app/src/app/components/DatailsBook/index.js",["131","132"],"import React from \"react\";\nimport bookDefaul from \"../../../assets/svg/book.svg\";\nimport {  faBookDead, faBookOpen } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    Span,\n    BookLine,\n    Strong,\n    BookLineColLeft,\n    Booktitle,\n    BookLineColRigth,\n    BookHead,\n    BookDescription,\n    BookSubTitleAuthors,\n    ContainerBookDetail,\n    ButtonBookActionRent,\n  } from \"./styles\";\n  \n\nconst DatailsBook = ({ bookDetail = {}, disableButton, ...props }) => {\n\n  const showStatus = (status = false) => {\n    if(status){\n      return (\n        <span style={{color:'red'}}><FontAwesomeIcon icon={faBookDead} /> Locado</span>\n      )\n    }  \n    return (\n      <span style={{color:'green'}}><FontAwesomeIcon icon={faBookOpen} /> Disponivel</span>\n    )\n  }\n  return (\n    <>\n      <ContainerBookDetail>\n        <BookLine>\n          <BookLineColLeft>\n            <img src={bookDefaul} style={{ width: \"80%\" }} />\n          </BookLineColLeft>\n          <BookLineColRigth>\n            <BookHead>\n              <Booktitle>{bookDetail.title}</Booktitle>\n              <Span>\n                <BookSubTitleAuthors>{bookDetail.author}</BookSubTitleAuthors>\n                <BookSubTitleAuthors>, Ano {bookDetail.year}</BookSubTitleAuthors>\n                </Span>\n                <Span>\n                {showStatus(bookDetail.rented)}\n              </Span>\n            </BookHead>\n            <BookDescription>\n              <Span>\n                <Strong>Descrição:</Strong>{\" \"}\n                {bookDetail.description\n                  ? bookDetail.description\n                  : \"Nunhuma descrição foi informada\"}\n              </Span>\n            </BookDescription>\n          </BookLineColRigth>\n        </BookLine>\n        {props.children}\n       \n      </ContainerBookDetail>\n    </>\n  );\n};\n\n\nexport default DatailsBook;\n","/home/abel/projetos/book-store/client-app/src/app/Routes/index.js",["133"],"import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport SignIn from \"../pages/Auth/SignIn\";\nimport SignUp from \"../pages/Auth/SignUp\";\nimport BooksList from \"../pages/Books/BooksList\";\nimport BooksAdd from \"../pages/Books/BooksAdd\";\n\nimport { isAuthenticated } from \"../services/auth\";\nimport Home from \"../pages/Home\";\nimport BooksDetails from \"../pages/Books/BooksDetails\";\nimport BookReturn from \"../pages/Books/BookReturn\";\nimport BookEdit from \"../pages/Books/BookEdit\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n      )\n    }\n  />\n);\n\nconst Routes = () =>{\n  const history = useHistory(); \n\n  return(\n    <BrowserRouter history={history}>\n      <Switch>\n        <PrivateRoute exact path=\"/books\" component={BooksList} />\n        <PrivateRoute exact path=\"/book-add\" component={BooksAdd} />\n        <PrivateRoute exact path=\"/book-details/:id\" component={BooksDetails} />\n        <PrivateRoute exact path=\"/book-edit/:id\" component={BookEdit} />\n        <PrivateRoute exact path=\"/home\" component={Home} />\n        <PrivateRoute exact path=\"/return-book/:id\" component={BookReturn} />\n        <Route exact path=\"/login\" component={SignIn} />\n        <PrivateRoute path=\"/\" component={Home} />\n        <Route path=\"*\" component={() => <h1>Page not found</h1>} />\n      </Switch>\n    </BrowserRouter>\n  )\n};\nexport default Routes;","/home/abel/projetos/book-store/client-app/src/app/pages/Home/index.js",["134","135","136","137","138","139","140"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBook } from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  BookLine,\n  ButtonBookActionRent,\n  Container,\n  ContainerBookDetail,\n} from \"../../components/DatailsBook/styles\";\nimport BookService from \"../Books/service/books.service\";\nimport DatailsBook from \"../../components/DatailsBook\";\nimport { ContainerButton, FormSearch } from \"../Books/BooksList/styles\";\nimport Checkbox from \"../../components/Checkbox\";\nimport styled from \"styled-components\";\nimport Switch from \"../../components/Switch\";\n\nconst Home = ({ ...props }) => {\n  const history = useHistory();\n  const [listBooksResponse, setListBooksResponse] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [checked, setChecked] = useState(false);\n\n  const getBooks = () => {\n    BookService.GetBookNotRentedByIdService(checked)\n      .then((res) => {\n        setListBooksResponse(res.result.resultado);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  };\n\n  useEffect(() => {\n    getBooks();\n  }, [checked]);\n\n  const filter = (e) => {\n    e.preventDefault();\n    getBooks();\n  };\n\n  const lookDetails = (id) => {\n    history.push(`/book-details/${id}`);\n  };\n  const returnBook = (id) => {\n    history.push(`/return-book/${id}`);\n  };\n  const RenderListBooks = () => {\n    console.log(listBooksResponse.length);\n    if (listBooksResponse.length > 0) {\n      return listBooksResponse.map((book, index) => {\n        return (\n          <DatailsBook\n            key={index}\n            history={history}\n            bookDetail={book}\n            disableButton={false}\n            BookRent={() => {}}\n          >\n            <BookLine>\n              <ButtonBookActionRent>\n                <button\n                  // disabled={book.rent}\n                  onClick={() => {\n                    if(book.rented){\n                      returnBook(book.id);\n                    }else{\n                      lookDetails(book.id);\n                    }\n                      \n                  }}\n                >\n                  <FontAwesomeIcon icon={faBook} />\n                  <span> {book.rented? 'Devolver o livro' : 'Ver Detalhes'}</span>\n                </button>\n              </ButtonBookActionRent>\n            </BookLine>\n          </DatailsBook>\n        );\n      });\n    }\n  };\n  const handleCheckboxChange = (e) => {\n    setChecked(!checked);\n  };\n\n  return (\n    <Container>\n      <ContainerBookDetail>\n        <h1>Livros Cadastrados</h1>\n        <ContainerButton>\n          <FormSearch\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <input\n              type=\"text\"\n              value={searchValue}\n              onChange={(e) => {\n                setChecked(!checked);\n              }}\n            />\n            <button type=\"button\" className=\"btn btn-primary\" onClick={filter}>\n              Pesquisar\n            </button>            \n          </FormSearch>\n          <CheckboxContainer checked={checked} >\n              <label htmlFor=\"renteds\">Filtar somente locados</label>\n              <Switch\n                isOn={checked}\n                onColor=\"#EF476F\"\n                handleToggle={(e) => handleCheckboxChange(e)}\n              />\n          </CheckboxContainer>\n        </ContainerButton>\n      </ContainerBookDetail>\n      {RenderListBooks()}\n    </Container>\n  );\n};\n\nexport const CheckboxContainer = styled.div`\n  width: 400px;\n  height: 35px;\n  padding-left: 5px;\n  margin: 0px 4px;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  label{\n    margin-left: 15px;\n    color: #0069af;\n  }\n`;\nexport const StyledCheckbox = styled.label`\n  width: 23px;\n  height: 23px;\n  margin-right: 6px;\n  border-radius: 50%;\n  background: #f6f6f6;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const HiddenCheckbox = styled.input.attrs({ type: \"checkbox\" })``;\nexport const Text = styled.label``;\n\nexport default Home;\n","/home/abel/projetos/book-store/client-app/src/app/pages/Books/BookEdit/index.js",["141","142"],"import React, { useState, useEffect } from \"react\";\nimport {  useHistory, useParams } from \"react-router-dom\";\nimport BookService from \"../service/books.service\";\nimport styled from \"styled-components\";\nimport { Container } from \"../../../components/DatailsBook/styles\";\nimport { ContainerFormCenter } from \"../BooksAdd/styles\";\nimport { FormAddBook, FormItem, FormItemTextArea } from \"../BooksAdd/styles\";\nimport UserService from \"../../Auth/SignUp/service/signUp.service\";\n\n\nconst BookEdit = () => {\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [user, setUser] = useState({ userId: \"\" });\n  const [showMessageSuccess, setShowMessageSuccess] = useState(false);\n  const [errorOnSave, setErrorOnSave] = useState(false);\n  const [categories, setCategories] = useState('');\n  const [book, setBook] = useState({title:'',description:'',year:'',publishingCompany:'',author:'',categoryId:''});\n\n  useEffect(() => {\n    const getBook = () => {\n      BookService.GetBookByIdService(id).then((res) => {\n        setBook(res.result);\n      });\n    };\n    getBook();\n\n    const getUserInfo = () => {\n      UserService.getUserInfo().then((res) => {\n        setUser(res.id);\n      });\n    };\n    getUserInfo();\n  }, [id]);\n\n  const saveBook = () =>{\n    book.id = id;\n    BookService.UpdateBook(book)\n    .then(res =>{\n      if(res.success){\n        setShowMessageSuccess(true)\n        setTimeout(() => {          \n          setShowMessageSuccess(false)\n          history.push('/books')\n        }, 5000);\n      }\n    })\n    .catch(err => {\n      setErrorOnSave(true)\n      setShowMessageSuccess(true)\n\n      setTimeout(() => {          \n        setErrorOnSave(false)\n        setShowMessageSuccess(false)\n        history.push('/books')\n      }, 5000);\n    })\n\n  }\n  \n  useEffect(() => {\n    const getCategories = () =>{\n      BookService.GetCategories()\n      .then(res =>{\n        setCategories(res)\n      })\n    }\n    getCategories()\n    \n  }, [])\n\n  useEffect(() => {\n    const bookIsValid = () =>{\n      if(book.title !== '' && book.description !== '' && book.year !== '' &&\n        book.publishingCompany !== '' && book.author !== '' && book.categoryId !== ''){\n        setButtonDisabled(false);\n       }else{\n        setButtonDisabled(true);\n       }\n    }\n    bookIsValid()\n  }, [book])\n  \n\n  const showOption = () => {\n    if(categories && categories.length > 0)\n    return categories.map( (cat, index)=> {\n      return (\n        <option value={cat.id}>{cat.name}</option>\n      )\n    })\n  }\n\n  return (\n    <Container>\n        <h1>Alterar livro</h1>\n\n        <ContainerFormCenter>\n          <FormAddBook onSubmit={e => { e.preventDefault(); }}>\n            <MessageSuccessOrError hasSuccess={showMessageSuccess}>\n              Salvo com sucesso!\n            </MessageSuccessOrError>\n              <FormItem>\n                  <label>Titulo:</label>\n                  <input \n                    value={book.title}\n                    type=\"text\" \n                    onChange={(e)=>{                    \n                      e.preventDefault()\n                      setBook({...book ,title: e.target.value})\n                    }} \n                  />\n              </FormItem>\n              <FormItem>\n                <label>Autor:</label>\n                <input \n                    value={book.author}\n                    type=\"text\" \n                    onChange={(e)=>{                    \n                      e.preventDefault()\n                      setBook({...book ,author: e.target.value})\n                    }} \n                  />\n              </FormItem>\n              <FormItem>\n                <label>Ano:</label>\n                <input \n                    value={book.year}\n                    type=\"text\" \n                    onChange={(e)=>{                    \n                      e.preventDefault()\n                      setBook({...book ,year: e.target.value})\n                    }} \n                  />\n              </FormItem>\n              <FormItem>\n                <label>Editora:</label>\n                <input \n                    value={book.publishingCompany}\n                    type=\"text\" \n                    onChange={(e)=>{                    \n                      e.preventDefault()\n                      setBook({...book ,publishingCompany: e.target.value})\n                    }} \n                  />\n              </FormItem>\n\n              <FormItem>\n                <label>Cateoria:</label>\n                  <select as=\"select\"  onChange={(e)=> {\n                    setBook({...book ,categoryId: e.target.value !== \"Selecione uma Categoria\" ? e.target.value: '' })\n                  }}   value={book.categoryId}>\n                    <option>Selecione uma Categoria</option>\n                    {showOption()}\n                  </select>\n              </FormItem>\n              <FormItemTextArea>\n                <label>Descrição:</label>\n                <textarea onChange={(e)=>{                    \n                      e.preventDefault()\n                      setBook({...book ,description: e.target.value})\n                    }} >{book.description}</textarea>\n              </FormItemTextArea>\n\n              <FormItem>\n                <button \n                  disabled={buttonDisabled} \n                  type=\"button\" \n                  className=\"btn btn-primary\" \n                  onClick={(e) => {\n                    e.preventDefault();\n                    saveBook()  \n                  }}>\n                    Salvar\n                  </button>\n              </FormItem>\n          </FormAddBook>\n        </ContainerFormCenter>\n\n    </Container>\n  );\n}\nconst MessageSuccessOrError = styled.div`\n  background:  ${({ hadError }) =>{\n    return (hadError ? '#ff3333' : '#81c189')}\n  }; \n  min-height: 20px;\n  display: block;\n  width: 100%;\n  border-radius: 6px;\n  padding: 20px;\n  margin-bottom: 20px;\n  display: ${({ hasSuccess }) =>{\n    return (hasSuccess ? 'block': 'none' )}\n  }; \n`;\n\nexport default BookEdit;","/home/abel/projetos/book-store/client-app/src/app/services/api.js",[],"/home/abel/projetos/book-store/client-app/src/app/components/DatailsBook/styles.js",[],"/home/abel/projetos/book-store/client-app/src/index.js",[],"/home/abel/projetos/book-store/client-app/src/app/components/NavMenu/index.js",["143"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { logout } from '../../services/auth';\r\nimport './NavMenu.css';\r\nconst NavMenu = ({...props}) => {\r\n  \r\n  const history = useHistory();\r\n  \r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const toggleNavbar = () => {\r\n    setCollapsed(!collapsed);\r\n  }\r\n\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand href=\"/\">Book Store</NavbarBrand>\r\n            <NavbarToggler onClick={()=>toggleNavbar()} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink  className=\"text-dark\"  href=\"/home\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink  className=\"text-dark\" href=\"/books\">Books</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"text-dark\" href=\"#\" onClick={()=> {\r\n                    logout()\r\n                    window.location = '/';\r\n                  }}>Logout</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n}\r\nexport default NavMenu;","/home/abel/projetos/book-store/client-app/src/app/pages/Books/BooksList/index.js",["144","145","146"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport BookService from \"../service/books.service\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrashAlt,\n  faPenAlt,\n  faSearch,\n  faBookDead,\n  faBookOpen,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  Container,\n  FormSearch,\n  ContainerTable,\n  ContainerButton,\n} from \"./styles\";\nimport styled from \"styled-components\";\nimport ButtonStyled from \"../../../components/button\";\nimport { ContainerBookDetail } from \"../../../components/DatailsBook/styles\";\nimport { Alert } from \"reactstrap\";\n\nconst BooksList = ({ props }) => {\n  const history = useHistory();\n  const [listBooksResponse, setListBooksResponse] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n\n  const getBooks = () => {\n    BookService.GetAllBooksService(pageNumber, pageSize, searchValue)\n      .then((res) => {\n        setListBooksResponse(res.result.resultado);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  };\n\n  useEffect(() => {\n    getBooks();\n  }, []);\n\n  const filter = (e) => {\n    e.preventDefault();\n    getBooks();\n  };\n  const createBook = () => {\n    history.push(\"/book-add\");\n  };\n\n  const lookDetails = (id) => {\n    history.push(`/book-details/${id}`);\n  };\n\n  const EditBook = (id) => {\n    history.push(`/book-edit/${id}`);\n  };\n  const DisableBook = (id) => {\n    setShowAlert(false);\n    BookService.DeleteBook(id).then((res) => {\n      let books = listBooksResponse;\n      books = books.filter(x=> x.id !== id);\n      setListBooksResponse(books);\n      setShowAlert(res.success);\n    });\n  };\n\n  \n\n  const showStatus = (status = false) => {\n    if(status){\n      return (\n        <span style={{color:'red'}}><FontAwesomeIcon icon={faBookDead} /> Locado</span>\n      )\n    }  \n    return (\n      <span style={{color:'green'}}><FontAwesomeIcon icon={faBookOpen} /> Disponivel</span>\n    )\n  }\n\n  const RenderListBooks = () => {\n    console.log(listBooksResponse.length);\n    if (listBooksResponse.length > 0) {\n      return listBooksResponse.map((book, index) => {\n        return (\n          <tr key={index}>\n            <th>{book.title}</th>\n            <th>{book.year}</th>\n            <th>{book.author}</th>\n            <th>{showStatus(book.rented)}</th>\n            <th>{book.publishingCompany}</th>\n            <th>\n              <ButtonTable\n                onClick={() => lookDetails(book.id)}\n                style={{ width: 1.5 + \"em\", border: \"unset\" }}\n              >\n                <FontAwesomeIcon\n                  icon={faSearch}\n                  style={{ margin: \"5px 10px\" }}\n                />\n              </ButtonTable>\n              <ButtonTable \n                 onClick={() => EditBook(book.id)}\n                style={{ width: 1.5 + \"em\", border: \"unset\" }}>\n                <FontAwesomeIcon\n                  icon={faPenAlt}\n                  style={{ margin: \"5px 10px\" }}\n                />\n              </ButtonTable>\n              <ButtonTable \n                onClick={() => DisableBook(book.id)}\n                style={{ width: 1.5 + \"em\", border: \"unset\" }}>\n                <FontAwesomeIcon\n                  icon={faTrashAlt}\n                  style={{ margin: \"5px 10px\" }}\n                />\n              </ButtonTable>\n            </th>\n          </tr>\n        );\n      });\n    } else {\n      return (\n        <tr>\n          <th colSpan=\"3\">Nenhum Resultado Encontrado</th>\n        </tr>\n      );\n    }\n  };\n  \n  return (\n    <Container>\n      <ContainerBookDetail>\n        <h1>Livros Cadastrados</h1>\n        <ContainerButton>\n          <div>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => createBook()}\n            >\n              Cadastrar novo livro\n            </button>\n          </div>\n        </ContainerButton>\n        <ContainerButton>\n          <FormSearch\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <input\n              type=\"text\"\n              value={searchValue}\n              onChange={(e) => {\n                setSearchValue(e.target.value);\n              }}\n            />\n            <button type=\"button\" className=\"btn btn-primary\" onClick={filter}>\n              Pesquisar\n            </button>\n          </FormSearch>\n        </ContainerButton>\n      </ContainerBookDetail>\n\n      <ContainerBookDetail>\n        <h4>Livos</h4>\n        <ContainerAlert show={()=> showAlert}>\n          <Alert color=\"primary\">\n            Livro desabilitado com sucesso!\n          </Alert>\n        </ContainerAlert>\n        <ContainerTable>\n          <table className=\"table table-striped table-hover\">\n            <thead className=\"thead-dark \">\n              <tr>\n                <th>Titulo</th>\n                <th>Ano</th>\n                <th>Autor</th>\n                <th>Status</th>\n                <th>Editora</th>\n                <th style={{ width: 150 + \"px\" }}>Ações</th>\n              </tr>\n            </thead>\n            <tbody>{RenderListBooks()}</tbody>\n          </table>\n        </ContainerTable>\n      </ContainerBookDetail>\n    </Container>\n  );\n};\nconst ContainerAlert = styled.div`\n  display: ${({ show }) =>{\n    return (show === true ? 'block': 'none' )}\n  }; \n`;\nconst ButtonTable = styled(ButtonStyled)`\n  box-sizing: border-box;\n  display: flex;\n  height: 0px;\n  padding: 0px;\n  margin: 25px;\n  display: contents;\n`;\n\nexport default BooksList;\n","/home/abel/projetos/book-store/client-app/src/app/pages/Books/BooksAdd/styles.js",[],"/home/abel/projetos/book-store/client-app/src/app/pages/Books/BooksList/styles.js",[],"/home/abel/projetos/book-store/client-app/src/app/components/Switch/index.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"155","line":13,"column":10,"nodeType":"153","messageId":"154","endLine":13,"endColumn":21},{"ruleId":"151","severity":1,"message":"156","line":17,"column":5,"nodeType":"153","messageId":"154","endLine":17,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":38,"column":13,"nodeType":"159","endLine":38,"endColumn":62},{"ruleId":"151","severity":1,"message":"160","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":14},{"ruleId":"151","severity":1,"message":"161","line":16,"column":8,"nodeType":"153","messageId":"154","endLine":16,"endColumn":16},{"ruleId":"151","severity":1,"message":"162","line":23,"column":23,"nodeType":"153","messageId":"154","endLine":23,"endColumn":37},{"ruleId":"151","severity":1,"message":"163","line":25,"column":10,"nodeType":"153","messageId":"154","endLine":25,"endColumn":20},{"ruleId":"151","severity":1,"message":"164","line":25,"column":22,"nodeType":"153","messageId":"154","endLine":25,"endColumn":35},{"ruleId":"151","severity":1,"message":"165","line":26,"column":10,"nodeType":"153","messageId":"154","endLine":26,"endColumn":18},{"ruleId":"151","severity":1,"message":"166","line":26,"column":20,"nodeType":"153","messageId":"154","endLine":26,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":41,"column":6,"nodeType":"169","endLine":41,"endColumn":15,"suggestions":"170"},{"ruleId":"151","severity":1,"message":"171","line":16,"column":10,"nodeType":"153","messageId":"154","endLine":16,"endColumn":14},{"ruleId":"151","severity":1,"message":"155","line":18,"column":10,"nodeType":"153","messageId":"154","endLine":18,"endColumn":21},{"ruleId":"151","severity":1,"message":"172","line":8,"column":9,"nodeType":"153","messageId":"154","endLine":8,"endColumn":16},{"ruleId":"151","severity":1,"message":"164","line":32,"column":22,"nodeType":"153","messageId":"154","endLine":32,"endColumn":35},{"ruleId":"151","severity":1,"message":"166","line":33,"column":20,"nodeType":"153","messageId":"154","endLine":33,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":47,"column":6,"nodeType":"169","endLine":47,"endColumn":8,"suggestions":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'errorOnSave' is assigned a value but never used.","'ButtonBookActionRent' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SignUp' is defined but never used.","'Checkbox' is defined but never used.","'setSearchValue' is assigned a value but never used.","'pageNumber' is assigned a value but never used.","'setPageNumber' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBooks'. Either include it or remove the dependency array.","ArrayExpression",["176"],"'user' is assigned a value but never used.","'history' is assigned a value but never used.",["177"],"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [checked, getBooks]",{"range":"182","text":"183"},"Update the dependencies array to be: [getBooks]",{"range":"184","text":"185"},[1292,1301],"[checked, getBooks]",[1278,1280],"[getBooks]"]